* {
    box-sizing: border-box
}

:root {
    --h1: clamp(3.5rem, 5.5vw, 15rem);
    --tile-h: auto;
    --offwhite-50: hsla(0, 37%, 92%, 0.50);
    --offwhite-25: hsla(0, 37%, 92%, 0.25);
    --offwhite-75: hsla(0, 37%, 92%, 0.75);
    --offwhite: hsl(0, 40%, 94%);

    --broken-light: hsl(0, 0%, 68.6%);
    --broken-lighter: hsl(0, 0%, 50%);
    --dark-purple: hsl(287, 15%, 23%);

    --blob-clr-1: #007fff;
    --blob-clr-2: #360714;

    --clr-1: hsl(0, 80%, 20%);
    --clr-2: hsl(0, 77%, 25%);
    --clr-3: hsl(0, 70%, 30%);
    --clr-4: hsl(0, 52%, 50%);
    --clr-5: hsl(0, 19%, 60%);

    --green-1: hsl(123, 52%, 70%);
    --green-2: hsl(123, 39%, 42%);
    --about-extra-space: clamp(2rem, 25vw, 20rem);
    --me-w: min(100vw, 800px);
    --me-h: calc(var(--me-w) * 0.752);
    --shadow: drop-shadow(0px 2px 2px hsla(0, 0%, 0%, 0.5));
    --contact-inner-radius: 1rem;
    --contact-button-inset: -0.1rem;

    --aboutme-gradient: linear-gradient(120deg, var(--blob-clr-1), var(--blob-clr-2), var(--blob-clr-1));

}

::selection {
    background-color: #2d2d2d;
    color: var(--offwhite)
}

input::selection,
textarea::selection {
    color: #2d2d2d;
    background-color: var(--offwhite-50)
}

html {
    overflow-x: hidden
}

body {
    display: grid;
    height: 100%;
    position: relative;
    margin: 0;
    padding: 0;
    background-color: #000;
    color: var(--offwhite);
    line-height: 1.2;
    font-family: 'Space Mono', monospace;
    overflow-x: inherit
}

.megablob {
    position: absolute;
    z-index: -2;
    width: 100lvw;
    height: 100lvh;
    inset: 0;
    background-image: url(img/blob-bg.svg?v1);
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: cover
}

@media (orientation:landscape) and (max-height:832px),
(min-width:1140px) {
    .megablob {
        background-size: contain;
        scale: 140%
    }
}

.overflow-hidden {
    overflow: hidden !important
}

h1,
h2,
h3,
h4 {
    color: var(--offwhite);
    max-width: 100vw;
    max-width: calc(100vw - 12px * 2)
}

h1 {
    line-height: .75;
    font-size: var(--h1);
    font-weight: 700;
    letter-spacing: -.2rem
}

h2 {
    letter-spacing: -.066rem
}

.titoletto {
    letter-spacing: -.08rem
}

h2,
h3,
h4 {
    line-height: 1
}

#showcase {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center
}

.full-gradient {
    position: absolute;
    width: 100%;
    height: 100lvh;
    background: var(--clr-2);
    z-index: -5;
    overflow: hidden;
    opacity: .45;
    mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0))
}

.full-gradient::after,
.full-gradient::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -5;
    transition: opacity 4s linear
}

.full-gradient::before {
    background: radial-gradient(at right bottom, var(--clr-3), var(--clr-4));
    opacity: 1;
    z-index: -1;
    animation: fadeInOut 12s linear infinite
}

.full-gradient::after {
    background: radial-gradient(at right bottom, var(--clr-3), var(--clr-2));
    opacity: 0;
    z-index: -2;
    animation: fadeInOut 12s linear infinite;
    animation-delay: 6s
}

@keyframes fadeInOut {

    0%,
    100%,
    50% {
        opacity: 1
    }

    25%,
    75% {
        opacity: 0
    }
}

@media (width < 768px) and (orientation:portrait) {
    .full-gradient {
        height: 200lvh
    }
}

.darken {
    filter: brightness(.7)
}

.tile {
    background: #1e1e1e;
    border: 1px solid #333;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, .5);
    overflow: hidden;
    flex: 1 1 calc(50% - 20px);
    display: flex;
    flex-direction: column;
    position: relative;
    font-family: 'Space Mono', monospace;
    top: 1rem;
    transition: filter .3s ease, border 0s;
    height: var(--tile-h)
}

.tile .image-wrapper {
    position: relative;
    width: 100%;
    z-index: 0;
    position: relative;
    overflow: hidden
}

.tile img {
    width: 100%;
    height: auto;
    transition: filter .5s, transform .5s;
    display: block;
    min-height: 10rem;
    object-fit: cover
}

.tile .image-wrapper:hover img {
    filter: brightness(.5) blur(5px);
    transform: scale(1.05)
}

.tile .content {
    padding: 15px;
    z-index: 1;
    position: relative
}

.tile h2 {
    margin: 0 0 10px 0;
    font-size: 1.5em;
    color: #fff
}

.tile p {
    margin: 0;
    color: #ccc
}

.open-btn {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #e8e8e8;
    backdrop-filter: blur(20px);
    color: #000;
    border: none;
    padding: .7rem 1.4rem;
    font-size: 16px;
    cursor: pointer;
    opacity: 0;
    outline: 2px solid #e8e8e8;
    transition: opacity .3s, color .5s, background-color .5s, outline .5s
}

.open-btn:hover {
    background-color: hsla(0, 0%, 12%, .205);
    outline: 2px solid #fff
}

.image-wrapper:hover .open-btn {
    opacity: 1
}

@media (max-width:768px) {
    .tile {
        flex: 1 1 100%
    }
}

.buttons {
    font-size: clamp(2rem, 5.5vw, 15rem)
}

span.line {
    display: inline-block
}

p {
    text-wrap: pretty
}

.tile.more {
    transition: all 3s ease, border 0s;
    border: 0 solid #333;
    max-height: 0
}

#carica h3 {
    color: inherit
}

#carica {
    width: min-content;
    border-radius: 1rem;
    padding: 1.3rem 2rem .8rem;
    cursor: pointer;
    user-select: none;
    transition: all 2s, outline .5s, background-color .2s, color .2s;
    margin: 0 auto;
    overflow: hidden;
    --perspective: 0;
    transform: translateZ(var(--perspective)) translateY(calc(-4 * var(--perspective) - 1rem)) scale(.5);
    transform-style: inherit
}

#carica:hover {
    background-color: hsla(0, 0%, 20%, .3)
}

#carica:active {
    background-color: hsla(0, 0%, 40%, .3);
    color: hsla(0, 0%, 93%, .928)
}

.before-aboutme {
    transform: translateZ(-1rem) scale(1.25);
    transform-style: inherit;
    padding-top: 5rem;
    height: 10px;
    width: 100%;
    background-color: transparent;
    pointer-events: none;
    position: relative;
    z-index: -1
}

.before-aboutme::before {
    content: "";
    position: absolute;
    inset: 0;
    width: 50%;
    left: 0;
    top: calc(var(--about-extra-space)/ -2);
    transform: skewY(-3deg);
    transform-origin: right;
    background-color: #000
}

.before-aboutme::after {
    content: "";
    position: absolute;
    inset: 0;
    width: 50%;
    left: 50%;
    top: calc(var(--about-extra-space)/ -2);
    transform: skewY(3deg);
    transform-origin: left;
    background-color: #000
}

.after-aboutme {
    position: relative;
    width: 100%;
    background-color: transparent;
    pointer-events: none;
    z-index: 0;
    height: var(--about-extra-space)
}

.after-aboutme::before {
    content: "";
    position: absolute;
    inset: 0;
    width: 50%;
    height: calc(var(--about-extra-space) + var(--me-h));
    left: 50%;
    top: calc(var(--about-extra-space)/ 2);
    transform: skewY(-3deg);
    transform-origin: left;
    background-color: #000
}

.after-aboutme::after {
    content: "";
    position: absolute;
    inset: 0;
    width: 50%;
    height: calc(var(--about-extra-space) + var(--me-h));
    left: 0;
    top: calc(var(--about-extra-space)/ 2);
    transform: skewY(3deg);
    transform-origin: right;
    background-color: #000
}

.aboutme {
    transform: translateZ(.15rem);
    transform-style: inherit;
    z-index: -2;
    width: 100%;
    margin: 0 auto 2.5rem;
    position: relative
}

.aboutme::before {
    content: "";
    position: absolute;
    inset: 0;
    background: repeat;
    box-shadow: 0 0 8px 1px rgba(0, 0, 0, .7);
    background-image: url(img/leaf-pattern.webp);
    transform: translateZ(-1rem) scale(1.25);
    height: calc(100% + var(--about-extra-space) * 2);
    filter: brightness(.9) contrast(1.05);
    transition: filter .8s ease;
    z-index: -2
}

.aboutme::after {
    height: 100%;
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background-size: 300%;
    background-image: var(--aboutme-gradient);
    animation: bg-animation 30s infinite;
    height: calc(100% + var(--about-extra-space) * 2);
    opacity: .5;
}

@keyframes bg-animation {
    0% {
        background-position: left
    }

    50% {
        background-position: right
    }

    100% {
        background-position: left
    }
}

.aboutme:hover:before {
    filter: brightness(.7) contrast(1.05)
}

.aboutme .text {
    margin-top: calc(var(--about-extra-space)/ 1.15);
    padding-inline: .5rem
}

.aboutme p {
    margin-inline: auto;
    font-size: clamp(1rem, 5vw, 1.5rem);
    padding-inline: 1rem;
    letter-spacing: -.05rem
}

.rhomboid {
    --width: 50svw;
    z-index: -2;
    width: var(--width);
    height: 20svh;
    position: absolute;
    right: calc(var(--width) * var(--index) - 100vw);
    top: 0;
    background-color: var(--broken-lighter);
    opacity: .2;
    clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
    rotate: y 90deg;
    will-change: scroll-position
}

.heading {
    margin-block: 3rem;
    width: auto;
    padding: .5rem 1.25rem;
    border-radius: 1rem;
    filter: var(--shadow)
}

.heading h2 {
    margin-bottom: 1.5rem
}

@media (max-width:768px) {
    .rhomboid {
        --multiplier: 1.5;
        height: 45svh;
        clip-path: polygon(50% 0, 100% 50%, -126.53% 77.8%, 0 50%);
        background-color: var(--broken-light)
    }

    .heading {
        display: flex;
        flex-direction: column-reverse;
        gap: .15rem
    }

    .heading h1,
    .heading h2 {
        margin: 0
    }
}

@keyframes brokenLight {

    0%,
    100%,
    20%,
    35%,
    55%,
    70%,
    8% {
        background-color: var(--offwhite)
    }

    10%,
    25%,
    40%,
    60%,
    80% {
        background-color: var(--broken-light)
    }

    75%,
    77%,
    79%,
    81%,
    83%,
    85%,
    87%,
    89% {
        background-color: var(--broken-light)
    }

    90%,
    92%,
    94%,
    96%,
    98% {
        background-color: var(--offwhite)
    }

    30%,
    32%,
    34%,
    36%,
    38%,
    50%,
    52%,
    54% {
        background-color: var(--offwhite)
    }

    65%,
    67%,
    69% {
        background-color: var(--offwhite)
    }

    45%,
    46%,
    47%,
    48%,
    49%,
    97.7%,
    97.9%,
    98.4% {
        background-color: var(--offwhite)
    }

    97.5%,
    97.8%,
    98%,
    98.5%,
    99% {
        background-color: var(--broken-light)
    }
}

.flickering-background {
    animation: brokenLight 10s infinite
}

.titoletto {
    filter: var(--shadow)
}

.pic {
    margin-top: calc(var(--about-extra-space) * -1 + 8vw);
    z-index: 1;
    position: relative;
    height: var(--me-h);
    width: 100%;
    max-height: 66svh;
    --bg-position-x: 0%
}

.pic::after {
    background-position-x: var(--bg-position-x);
    content: '';
    position: absolute;
    inset: 0;
    background-image: radial-gradient(ellipse farthest-corner, transparent 0, transparent 35%, #000 30%, #000 40%, transparent 90%), radial-gradient(ellipse farthest-corner at 0 0, transparent 0, transparent 20%, #000 15%, #000 20%, transparent 50%), radial-gradient(ellipse farthest-corner at 8px 8px, transparent 0, transparent 20%, #000 15%, #000 20%, transparent 50%), radial-gradient(ellipse farthest-corner at 0 8px, transparent 0, transparent 20%, #000 15%, #000 20%, transparent 40%), radial-gradient(ellipse farthest-corner at 8px 0, transparent 0, transparent 20%, #000 15%, #000 20%, transparent 50%), linear-gradient(0deg, #be2000 0, #c02708 30%, #ba2407 50%, #760000 70%, rgba(0, 0, 0, 0) 100%);
    background-size: 8px 8px, 8px 8px, 8px 8px, 8px 8px, 8px 8px, 100% 100%;
    mask-image: linear-gradient(to bottom, transparent 0, transparent 5%, rgba(0, 0, 0, 1) 100%);
    mask-size: cover;
    z-index: -4
}

.big {
    text-shadow: -1px -1px #ff0, 1px 1px #be2000, 2px 2px #c02708;
    transform: rotate(-10deg) skew(-10deg, 0);
    padding-bottom: 50px;
    margin-left: 10rem;
    font-size: var(--h1);
    display: none
}

@media (width >=1050px) {
    .big {
        display: block
    }
}

.pic img {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 100%;
    object-fit: contain;
    object-position: 100%;
    z-index: var(--index);
    user-select: none;
    pointer-events: none;
    transition: opacity .5s cubic-bezier(.25, 1, .75, 1)
}

footer.magicpattern {
    display: flex;
    min-height: 45rem;
    align-items: center;
    justify-content: center;
    z-index: 2;
    position: relative;
    transform: translateZ(.01rem);
    overflow: hidden;
    width: 100%;
    margin-top: -2rem
}

.magicpattern svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1
}

footer {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: clamp(1.5rem, 6vw, 4rem);
    position: relative
}

@media (prefers-reduced-motion:reduce) {
    .rhomboid {
        animation: none;
        background-color: var(--broken-light)
    }
}

.contact-button {
    background: var(--clr-1);
    position: relative
}

footer .contact-button {
    padding: 1rem 1.75rem 1.25rem;
    border: none;
    border-radius: calc(var(--contact-button-inset) + var(--contact-inner-radius));
    background-color: var(--clr-4);
    color: var(--offwhite);
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    position: relative;
    justify-content: center;
    margin-inline: auto;
    width: 100%;
    transition: letter-spacing 1s ease, width 1.5s ease, background-color .33s ease, transform .25s ease-in-out, padding-bottom .5s, opacity .8s;
    letter-spacing: -.05rem
}

@media (width >=1100px) {
    footer .contact-button {
        padding: .45rem 1.25rem .5rem;
        font-size: 3rem 
    }
}

footer .contact-button:hover {
    background-color: var(--clr-3);
    /* letter-spacing: 0rem */
}

/* footer .contact-button:active {
    transform: scale(100.001%);
    bottom: 1px
}

footer .contact-button.converged {
    width: calc(100% - 1rem * 2)
} */

footer .contact-button>div {
    width: max-content
}

.contact-button .before {
    margin-right: 6rem
}

.contact-button .after {
    margin: 2.5rem
}

.contact-button .after i,
.contact-button .before i {
    position: absolute;
    font-size: 3rem
}

@media (max-width:500px) {
    footer .contact-button {
        justify-content: space-evenly;
        gap: 2rem;
        letter-spacing: normal;
        padding: 1.25rem 1.75rem 1.5rem;
        --contact-button-inset: -0.15rem
    }

    .contact-button .after,
    .contact-button .before {
        margin: 0;
        display: block
    }

    .contact-button .after i,
    .contact-button .before i {
        font-size: 1.6rem
    }
}

.contact-button .after,
.contact-button .before {
    display: flex;
    align-items: center;
    gap: .5rem;
    height: 1rem;
    width: 1rem;
    position: relative;
    z-index: 2;
    color: var(--clr-4);
    transform: translateY(0);
    transition: opacity 1.5s ease, transform 1s, color 1s
}

.contact-button:hover .after,
.contact-button:hover .before {
    color: var(--clr-3);
    animation: up-down .5s linear infinite alternate;
    transform: translateY(-12.5%)
}

.contact-button .before.converged {
    transform: translate(1000%, -75%);
    opacity: 0
}

.contact-button .after.converged {
    transform: translate(-1000%, 75%);
    opacity: 0
}

.hidden {
    transition: .5s;
    opacity: 0;
    pointer-events: none
}

input[type=checkbox] {
    accent-color: var(--clr-4)
}

#contactstuff {
    position: fixed;
    top: 0;
    left: 0;
    height: 100lvh;
    width: 100%;
    background-color: #000;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: url(img/blob-bg.svg?v1);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: 50% 50%
}

#contactstuff .container {
    position: relative;
    top: 2.5rem;
    display: flex;
    flex-direction: column;
    align-content: center;
    align-items: center
}

@media (500px < width <=1412px) {
    #contactstuff .container {
        width: 50%
    }
}

@media (300px < width <=500px) {
    #contactstuff .container {
        width: 100%;
        margin-inline: 2rem
    }
}

body::before {
    content: "";
    z-index: 99;
    position: absolute;
    background-color: #000;
    inset: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    transition: .5s;
    pointer-events: none;
    opacity: var(--before-opacity, 0)
}

.cursor-pointer {
    cursor: pointer
}

.w-max {
    width: max-content
}

.w-min {
    width: min-content
}

#contactstuff div[role=button] {
    background-color: var(--offwhite-25);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding-right: 1rem;
    padding-left: .5rem
}

#contactstuff div[role=button]:hover {
    background-color: var(--offwhite-50)
}

#contactstuff div[role=button]:active {
    background-color: var(--broken-light)
}

div.close {
    color: rgba(var(--offwhite), .8);
    transition: color ease .1s;
    font-size: 1.5rem;
    width: 100%;
    display: grid;
    place-items: center;
    margin-top: 2.5rem;
    transition: opacity ease 2s
}

div.close:hover {
    color: rgba(var(--offwhite), .9)
}

div.close:active {
    color: rgba(var(--offwhite), 1)
}

div.close>i {
    grid-area: 1/1
}

.☺ {
    color: bisque;
    animation: hidesmile🙂 5s ease-in-out infinite alternate
}

.x {
    animation: hidex 5s ease-in-out infinite alternate
}

@keyframes hidex {

    0%,
    50% {
        opacity: 1
    }

    100%,
    60% {
        opacity: 0
    }
}

@keyframes hidesmile🙂 {

    0%,
    50% {
        color: hsla(0, 0%, 0%, 0)
    }

    100%,
    60% {
        color: hsla(33, 100%, 88%, 100%)
    }
}

#contact-form {
    z-index: 1;
    padding: 2rem;
    background-color: var(--offwhite-25);
    backdrop-filter: blur(10px);
    border-radius: var(--contact-inner-radius)
}

.form-control {
    border: none;
    background-color: hsla(0, 0%, 13%, .6);
    transition: background-color .2s
}

.form-control:focus {
    background-color: hsla(0, 0%, 13%, .7)
}

button[type=submit] {
    background-color: hsla(0, 0%, 13%, .606);
    color: #fff;
    transition: background-color 50ms, background-position .5s;
    background-position: 50% 0;
    background-size: 105%
}

button[type=submit]:hover {
    background-color: #001220;
    color: #fff;
    background-image: url(img/layered-waves.svg);
    background-repeat: no-repeat;
    background-position: 50% 80%
}

button[type=submit]:active {
    background-color: var(--clr-2);
    color: #fff
}

.grow-wrap {
    display: grid
}

.grow-wrap::after {
    content: attr(data-replicated-value) " ";
    white-space: pre-wrap;
    visibility: hidden
}

.grow-wrap>textarea {
    resize: none
}

.grow-wrap::after,
.grow-wrap>textarea {
    max-height: 10rem;
    min-height: calc(1.5em + (.75rem + 2px));
    padding: .375rem .75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 24px;
    grid-area: 1/1/2/2
}

.layered-waves {
    background-image: url(img/layered-waves.svg);
    background-repeat: no-repeat;
    background-size: cover
}

.buttons,
.contact-button,
[role=button],
button {
    user-select: none
}

@keyframes fadeIn {
    from {
        opacity: 0
    }

    to {
        opacity: 1
    }
}

.fade-in {
    opacity: 0;
    animation: fadeIn 1.5s ease-in forwards;
    animation-delay: calc(var(--delay, 0) * 1s)
}

@keyframes slideInR {
    from {
        transform: translateX(min(50vw, 25rem));
        opacity: 0
    }

    to {
        transform: translateX(0);
        opacity: 1
    }
}

.slideR {
    opacity: 0;
    animation: slideInR 1s ease-out forwards;
    animation-delay: calc(var(--delay, 0) * 1s)
}

@keyframes slideInL {
    from {
        transform: translateX(max(-50vw, -25rem));
        opacity: 0
    }

    to {
        transform: translateX(0);
        opacity: 1
    }
}

.slideL {
    opacity: 0;
    animation: slideInL 1s ease-out forwards;
    animation-delay: calc(var(--delay, 0) * 1s)
}